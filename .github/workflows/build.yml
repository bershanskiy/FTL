# This workflow builds FTL
# It is analogous to Circle CI workflow here:
# ../../.circleci/config.yml
name: Build and test

on:
  push:
    branches:
     - '*'
  pull_request:
    branches:
     - '*'

jobs:
  build:

    strategy:
      matrix:
        include:
         - circle_job: armv4t
           bin_name: pihole-FTL-armv4-linux-gnueabi
         - circle_job: armv5te
           bin_name: pihole-FTL-armv5-linux-gnueabi
         - circle_job: armv6hf
           bin_name:  pihole-FTL-armv6-linux-gnueabihf
         - circle_job: armv7hf
           bin_name: pihole-FTL-armv7-linux-gnueabihf
         - circle_job: armv8a
           bin_name: pihole-FTL-armv8-linux-gnueabihf
         - circle_job: aarch64
           bin_name: pihole-FTL-aarch64-linux-gnu
         - circle_job: x86_64
           bin_name: pihole-FTL-linux-x86_64
         - circle_job: x86_64-musl
           bin_name: pihole-FTL-musl-linux-x86_64
         - circle_job: x86_32
           bin_name: pihole-FTL-linux-x86_32

    container: pihole/ftl-build:v1.8-${{ matrix.circle_job }}

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: "Build"
      run: |
        # Extract branch name or ref from GITHUB_REF variable
        CIRCLE_TAG=""
        BRANCH="test"
        bash .circleci/build-CI.sh "-DSTATIC=${STATIC}" "${BRANCH}" "${CIRCLE_TAG}" "${{ matrix.circle_job }}"
    - name: "Binary checks"
      run: |
        export CIRCLE_JOB="${{ matrix.circle_job }}"
        bash test/arch_test.sh
    - name: "Compute checksum"
      run: |
        mv pihole-FTL "${{ matrix.bin_name }}"
        sha1sum pihole-FTL-* > ${{ matrix.bin_name }}.sha1
    # NOTE: Steps "Upload binary to binary bucket" and "Verify uploaded binary"
    # are intentionally left out.
    - name: "Test"
      run: |
          export CIRCLE_JOB="${{ matrix.circle_job }}"
          mv "${{ matrix.bin_name }}" pihole-FTL
          test/run.sh
